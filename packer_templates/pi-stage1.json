{
	"variables": {
	},
	"builders": [
		{
			"name": "pi",
			"type": "arm-image",
			"image_type": "raspberrypi",
			"iso_url": "https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2020-08-24/2020-08-20-raspios-buster-armhf-lite.zip",
			"iso_checksum": "sha256:4522df4a29f9aac4b0166fbfee9f599dab55a997c855702bfe35329c13334668",
			"output_filename": "images/upstream/pi-s1.img"
		}
	],
	"provisioners": [
		{
			"type": "shell",
			"environment_vars": [ "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" ],
			"execute_command": "/bin/chmod +x {{ .Path }} ; {{ .Vars }} {{ .Path }}",
			"inline": [
				"mv /etc/ld.so.preload /etc/ld.so.preload.dist"
			],
			"skip_clean": true
		},
		{
			"type": "shell",
			"environment_vars": [
				"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
				"rootfs_uuid={{user `rootfs_uuid`}}",
				"bootfs_id={{user `bootfs_id`}}"
			],
			"execute_command": "/bin/chmod +x {{ .Path }} ; {{ .Vars }} {{ .Path }}",
			"inline": [
				": > /etc/fstab",
				"printf 'UUID=%s / ext4 defaults,noatime 0 1\n' \"${rootfs_uuid}\" >> /etc/fstab",
				"printf 'UUID=%s /boot vfat defaults,umask=0077,uid=1,gid=0 0 2\n' \"${bootfs_id}\" >> /etc/fstab",
				"sed -i -e 's@root=[0-9a-zA-Z/_.=\\-]\\+@root=UUID='\"${rootfs_uuid}\"'@' /boot/cmdline.txt",
				"cat /etc/fstab",
				"cat /boot/cmdline.txt",
				"df -h"
			],
			"skip_clean": true
		}
	],
	"post-processors": [
		{
			"type": "manifest"
		},
		{
			"type": "shell-local",
			"environment_vars": [
				"rootfs_uuid={{user `rootfs_uuid`}}",
				"bootfs_id={{user `bootfs_id`}}",
				"partition_id={{user `partition_id`}}"
			],
			"execute_command": [
				"/bin/bash", "-c", "{{.Vars}} {{.Script}}"
			],
			"inline": [
				"set -e",
				"imagefile=\"$(jq -r '.builds[] | select(.packer_run_uuid==\"'$PACKER_RUN_UUID'\") | .files[0].name' packer-manifest.json)\"",
				"for loop in $(kpartx -a -v $imagefile | awk '{ print $3 }') ; do",
				"  case $loop in",
				"    *1) mlabel -N $bootfs_id -i /dev/mapper/$loop ;;",
				"    *2) tune2fs -U $rootfs_uuid /dev/mapper/$loop ;;",
				"  esac",
				"done",
				"kpartx -d $imagefile",
				"printf 'x\ni\n0x%s\nr\nw\n' $partition_id | fdisk $imagefile"
			]
		}
	]
}
