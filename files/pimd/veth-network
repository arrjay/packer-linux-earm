#!/usr/bin/env bash

# first word is command state
# hostgen - generate systemd-network config for veth device
# v4conf  - configure ipv4 addressing for veth device

# second word is interface name prefix
. /usr/lib/untrustedhost/shellib/imd.bash

helperr() {
  err "hostgen|v4conf prefix"
  exit 1
}

hostgen() {
  local addrs='' a prefix
  prefix=$1
  addrs="$(getaddrsv4 "${prefix}")"
  # start writing a network config
  {
    printf '%s\n'      "[Match]"
    printf 'Name=%s\n' "${prefix}.0"
    printf '%s\n'      "[Network]" "LinkLocalAddressing=no" "LLMNR=false" "IPv6AcceptRa=no"

    for a in ${addrs} ; do
      # grab a /31 and get the top address
      local hm=''
      hm="$(ipcalc "${a}"| awk '$1 == "HostMin:" { print $2 }')"
      printf 'Address=%s\n' "${hm}/31"
    done
  } > "/run/systemd/network/${prefix}.0.network"
}

v4conf() {
  local addrs='' a prefix
  prefix=$1
  addrs="$(getaddrsv4 "${prefix}")"
  # just configure the network - grabbing the top /32 of each address for the host, the bottom as the gw
  ip link set dev "${prefix}.1" up
  for a in ${addrs} ; do
    local hm='' hx=''
    hm="$(ipcalc "${a}"| awk '$1 == "HostMin:" { print $2 }')"
    hx="$(ipcalc "${a}"| awk '$1 == "HostMax:" { print $2 }')"
    ip addr add "${hx}/31" dev "${prefix}.1"
    ip route add default via "${hm}"
  done
}

case "${1}" in
  hostgen) hostgen "${2}" ;;
  v4conf)  v4conf  "${2}" ;;
  *) { echo "hostgen|v4conf prefix" ; exit 1 ; } ;;
esac
